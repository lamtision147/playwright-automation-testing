import { Page } from 'playwright-core';
import { AddNetwork, AddToken } from '../../types';
import { WalletOptions } from '../wallets';
export declare const navigateHome: (page: Page) => Promise<void>;
export declare function getStarted(page: Page, { seed, password, }: WalletOptions): Promise<void>;
export declare const approve: (page: Page) => () => Promise<void>;
export declare const sign: (page: Page) => () => Promise<void>;
export declare const lock: (page: Page) => () => Promise<void>;
export declare const unlock: (page: Page) => (password?: string) => Promise<void>;
export declare const confirmTransaction: (page: Page) => () => Promise<void>;
export declare const addNetwork: (page: Page) => (options: AddNetwork) => Promise<void>;
export declare const deleteNetwork: (page: Page) => (name: string) => Promise<void>;
export declare const hasNetwork: (page: Page) => (name: string) => Promise<boolean>;
export declare const getTokenBalance: (page: Page) => (tokenSymbol: string) => Promise<number>;
export declare const countAccounts: (page: Page) => () => Promise<number>;
export declare const createAccount: (page: Page) => () => Promise<void>;
export declare const switchAccount: (page: Page) => (i: number) => Promise<void>;
export declare const deleteAccount: (_i: number) => Promise<void>;
export declare const addToken: (_: AddToken) => Promise<void>;
export declare const importPK: (_: string) => Promise<void>;
export declare const switchNetwork: (_: string) => Promise<void>;
export declare const confirmNetworkSwitch: () => Promise<void>;
